{
    "source": {
        "directories": [
            "src"
        ]
    },
    "timeout": 10,
    "logs": {
        "text": "php://stdout",
        "badge": {
            "branch": "master"
        }
    },
    "mutators": {
        "@default": true,
        "global-ignoreSourceCodeByRegex": [
            "\\\\assert\\(.+\\);",
            "\\$consumed ..?= .+;",
            "(\\$.+ \\.?= )?(pack|unpack)\\('\\w+', .+\\).?",
            ".*(0xffffffff|\\$this->totalLength|\\$this->originalSize|\\$this->compressedSize|\\$fileFooter|\\$cdrFile|\\$cdr64Eof|\\$cdr64Locator|\\$cdrEof).*",
            "return \\$d\\['year'\\] << 25 | \\$d\\['mon'\\] << 21 | \\$d\\['mday'\\] << 16 | \\$d\\['hours'\\] << 11 | \\$d\\['minutes'\\] << 5 | \\$d\\['seconds'\\] >> 1;"
        ],
        "ConcatOperandRemoval": {
            "ignoreSourceCodeByRegex": [
                "\\$newBucketData .= basename\\(\\$this->filename\\) . \"\\\\x00\";"
            ]
        },
        "FalseValue": {
            "ignoreSourceCodeByRegex": [
                "\\$footer = \\$this->buildZip64ExtraBlock\\(false\\);"
            ]
        },
        "FunctionCallRemoval": {
            "ignoreSourceCodeByRegex": [
                "sodium_memzero\\(.+\\);"
            ]
        },
        "Identical": {
            "ignoreSourceCodeByRegex": [
                "if \\('' === \\$this->buffer && !\\$closing\\) {"
            ]
        },
        "LessThanOrEqualTo": {
            "ignoreSourceCodeByRegex": [
                "while \\(self::ENCRYPT_READ_BYTES <= \\\\strlen\\(\\$this->buffer\\) || \\$closing\\) {"
            ]
        },
        "LessThanOrEqualToNegotiation": {
            "ignoreSourceCodeByRegex": [
                "while \\(\\$(readChunkSize|writeChunkSize) <= \\\\strlen\\(\\$this->buffer\\) || \\$closing\\) {"
            ]
        },
        "LogicalAnd": {
            "ignoreSourceCodeByRegex": [
                "if \\(\\$closing && '' === \\$this->buffer\\) {"
            ]
        },
        "NotIdentical": {
            "ignoreSourceCodeByRegex": [
                "if \\(\\[\\] !== \\$fields\\) {"
            ]
        },
        "TrueValue": {
            "ignoreSourceCodeByRegex": [
                "self::\\$filterRegistered = true;",
                "\\$footer = \\$this->buildZip64ExtraBlock\\(true\\);"
            ]
        },
        "UnwrapSubstr": {
            "ignoreSourceCodeByRegex": [
                ".+ = substr\\(\\$this->buffer,( 0,)? \\$(read|write)ChunkSize\\);",
                "\\$header = substr\\(\\$this->buffer, 0, self::HEADER_LENGTH\\);",
                "\\$data = substr\\(\\$data, 0, \\$dataDescriptorPosition\\);"
            ]
        }
    },
    "minMsi": 100,
    "minCoveredMsi": 100
}
